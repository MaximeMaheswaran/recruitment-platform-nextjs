// ✅ Ce composant est côté client
'use client';

import React from 'react';

// Types de métadonnées pour le SEO de la page
import type { Metadata } from "next";

// Importation de polices Google avec Next.js
import { Geist, Geist_Mono } from "next/font/google";

// Importation du fichier CSS global
import "./globals.css";

// App d'Ant Design (nécessaire pour certaines fonctionnalités comme les contextes)
import { App as AntdApp } from 'antd';

// AntdRegistry : nécessaire pour que les composants Antd fonctionnent avec Next.js
import { AntdRegistry } from '@ant-design/nextjs-registry';

// Composant d’en-tête personnalisé
import AppHeader from "@/components/AppHeader";

// Composants Layout et ConfigProvider d’Ant Design
import { ConfigProvider, Layout } from 'antd';
import { Content } from 'antd/es/layout/layout';

// Hook pour obtenir le chemin actuel
import { usePathname } from 'next/navigation';

// Menu latéral personnalisé
import AppSide from '@/components/AppSideMenu';

// Fournisseur global pour Redux / Zustand / autre store app
import { StoreProvider } from '@/store/StorePrvider';

// Thème personnalisé pour Ant Design
import themeConfig from '@/themeConfig';

// Fournisseur de langue pour la gestion manuelle (ex: langue sélectionnée)
import { LanguageProvider } from '@/language/LanguageProvider';

// Fournisseur de traduction i18n
import { I18nextProvider } from 'react-i18next';
import i18n from '@/language/i18n';

// Chargement et application des polices avec des variables CSS
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Métadonnées globales de l’application (pas utilisées ici car pas dans layout.tsx en mode "server")
const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Fonction pour vérifier si la page actuelle est une page RH
function IsRhPage() {
  const pathname = usePathname();
  return pathname.includes('/rh'); // Si l’URL contient /rh => on est dans l’espace recruteur
}

// Composant racine du layout global
export default function RootLayout({
  children, // Tous les enfants (pages) qui seront rendus ici
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    // Fournisseur global pour l’état de l’application
    <StoreProvider>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`} // Polices appliquées globalement
        >
          <ConfigProvider theme={themeConfig}> {/* Ant Design : thème personnalisé */}
            <AntdApp> {/* Fournisseur global Ant Design */}
              <I18nextProvider i18n={i18n}> {/* Fournisseur de traduction */}
                <LanguageProvider> {/* Fournisseur personnalisé de langue */}
                  <AntdRegistry> {/* Registre des composants Ant Design pour SSR avec Next */}
                    <Layout style={{ minHeight: '100vh' }}>
                      <AppHeader /> {/* En-tête de l’application */}

                      {IsRhPage() ? ( // Si on est sur une page RH, on affiche un layout avec un menu latéral
                        <Layout hasSider>
                          <AppSide /> {/* Menu latéral (sidebar) */}
                          <Layout style={{ marginLeft: "200px", marginTop: "100px" }}>
                            <Content style={{ padding: '16px', minHeight: 'calc(100vh - 64px)' }}>
                              {children} {/* Affichage du contenu de la page */}
                            </Content>
                          </Layout>
                        </Layout>
                      ) : (
                        // Sinon, juste un contenu simple sans menu latéral
                        <Content style={{ padding: '16px', minHeight: 'calc(100vh - 64px)' }}>
                          {children}
                        </Content>
                      )}
                    </Layout>
                  </AntdRegistry>
                </LanguageProvider>
              </I18nextProvider>
            </AntdApp> {/* ✅ Fin du contexte Ant Design */}
          </ConfigProvider>
        </body>
      </html>
    </StoreProvider>
  );
}
