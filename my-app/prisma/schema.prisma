// Ceci est le fichier de schéma Prisma
// Documentation officielle : https://pris.ly/d/prisma-schema

// Suggestions pour améliorer les performances (facultatif)
// Prisma Accelerate : https://pris.ly/cli/accelerate-init

// Générateur du client Prisma (le code TypeScript qui permet d'interagir avec la BDD)
generator client {
  provider = "prisma-client-js"  // Utilise le client JavaScript de Prisma
  output   = "./generated"       // Chemin de sortie pour le client généré
}

// Source de données (la base de données utilisée)
datasource db { 
  provider = "sqlite"            // Utilise SQLite comme base de données
  url = env("DATABASE_URL")      // L'URL de connexion est récupérée depuis une variable d'environnement
}

// Modèle "Candidate" représentant un candidat dans la base de données
model Candidate { 
  id Int @id @default(autoincrement())  // Clé primaire auto-incrémentée
  name String                           // Prénom du candidat
  lastname String                       // Nom de famille du candidat
  email String @unique                  // Email du candidat, doit être unique
  tel String                            // Numéro de téléphone
  poste String                          // Poste visé ou demandé
  message String                        // Message du candidat (motivation, etc.)
  cv String?                            // Lien ou chemin vers le CV (champ optionnel)
  status String                         // Statut de la candidature (ex : en cours, accepté, refusé)
  createdAt DateTime @default(now())    // Date de création, avec valeur par défaut à la date actuelle
}

// Modèle "recruteur" représentant un recruteur dans la base de données
model recruteur {
  id Int @id @default(autoincrement())  // Clé primaire auto-incrémentée
  name String                           // Prénom du recruteur
  lastname String                       // Nom de famille du recruteur
  username String @unique               // Nom d'utilisateur, doit être unique
  password String                       // Mot de passe (probablement hashé en pratique)
}
